// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// empb_beta_binomial_c_loop
NumericVector empb_beta_binomial_c_loop(const double& G, const NumericVector& Sg, const NumericVector& Tg, const NumericVector& Ng, const double& eta, const double& tol, const int maxIter, int method);
RcppExport SEXP _DHBayes_empb_beta_binomial_c_loop(SEXP GSEXP, SEXP SgSEXP, SEXP TgSEXP, SEXP NgSEXP, SEXP etaSEXP, SEXP tolSEXP, SEXP maxIterSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type Sg(SgSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type Tg(TgSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type Ng(NgSEXP);
    Rcpp::traits::input_parameter< const double& >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(empb_beta_binomial_c_loop(G, Sg, Tg, Ng, eta, tol, maxIter, method));
    return rcpp_result_gen;
END_RCPP
}
// empb_beta_negbinomial_c_loop
Rcpp::List empb_beta_negbinomial_c_loop(NumericVector& rab, const NumericVector& X, const double& G, const NumericVector& Sx, const NumericVector& mj, const double& eta, const double& tol, const int maxIter, int method);
RcppExport SEXP _DHBayes_empb_beta_negbinomial_c_loop(SEXP rabSEXP, SEXP XSEXP, SEXP GSEXP, SEXP SxSEXP, SEXP mjSEXP, SEXP etaSEXP, SEXP tolSEXP, SEXP maxIterSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type rab(rabSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const double& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type Sx(SxSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type mj(mjSEXP);
    Rcpp::traits::input_parameter< const double& >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(empb_beta_negbinomial_c_loop(rab, X, G, Sx, mj, eta, tol, maxIter, method));
    return rcpp_result_gen;
END_RCPP
}
// empb_gamma_poisson_c_loop
Rcpp::List empb_gamma_poisson_c_loop(NumericVector& ab, const double& G, const arma::colvec& Sx, const arma::colvec& mj, const double& eta, const double& tol, const int maxIter, int method);
RcppExport SEXP _DHBayes_empb_gamma_poisson_c_loop(SEXP abSEXP, SEXP GSEXP, SEXP SxSEXP, SEXP mjSEXP, SEXP etaSEXP, SEXP tolSEXP, SEXP maxIterSEXP, SEXP methodSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector& >::type ab(abSEXP);
    Rcpp::traits::input_parameter< const double& >::type G(GSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type Sx(SxSEXP);
    Rcpp::traits::input_parameter< const arma::colvec& >::type mj(mjSEXP);
    Rcpp::traits::input_parameter< const double& >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< const double& >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< const int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< int >::type method(methodSEXP);
    rcpp_result_gen = Rcpp::wrap(empb_gamma_poisson_c_loop(ab, G, Sx, mj, eta, tol, maxIter, method));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DHBayes_empb_beta_binomial_c_loop", (DL_FUNC) &_DHBayes_empb_beta_binomial_c_loop, 8},
    {"_DHBayes_empb_beta_negbinomial_c_loop", (DL_FUNC) &_DHBayes_empb_beta_negbinomial_c_loop, 9},
    {"_DHBayes_empb_gamma_poisson_c_loop", (DL_FUNC) &_DHBayes_empb_gamma_poisson_c_loop, 8},
    {NULL, NULL, 0}
};

RcppExport void R_init_DHBayes(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
